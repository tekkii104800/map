public class LookAtPos : MonoBehaviour
{
    public GameObject CameraPos;

    private float MoveSpeed = 0.0f;
    private Vector3 MoveDir=Vector3.zero;
    private float MaxMoveSpeed=8.0f;
    private float MoveAcc=0.2f;
    private Vector3 TargetDir;

    public enum LookAtPosRoutine
    {
        Stop,
        Start,
        Away,
        FirstAttack,
        OverTake,
    }

    public LookAtPosRoutine routine;
    // Start is called before the first frame update
    void Start()
    {
        this.transform.position = CameraPos.gameObject.transform.position;
    }

    // Update is called once per frame
    void Update()
    {
        var TargetPos = CameraPos.gameObject.transform.position;
        var LookAtPos = gameObject.transform.position;

        TargetDir = TargetPos - LookAtPos;

        //MoveSpeed = Mathf.Min(MaxMoveSpeed, MoveSpeed + MoveAcc);
        //MoveDir = TargetDir.normalized * MoveSpeed;
        //this.transform.position += Time.deltaTime * MoveDir;

        switch (routine)
        {
            case LookAtPosRoutine.Stop:
                this.transform.position = TargetPos;
                MoveSpeed = 0.0f;
                if (TargetDir.magnitude > 0.1f)
                {
                    routine = LookAtPosRoutine.Start;
                }
                break;
            case LookAtPosRoutine.Start:
                MoveSpeed = Mathf.Min(MaxMoveSpeed, MoveSpeed + MoveAcc);
                MoveDir = TargetDir.normalized * MoveSpeed;
                this.transform.position += Time.deltaTime * MoveDir;
                if (TargetDir.magnitude > 2.0f)
                {
                    routine = LookAtPosRoutine.Away;
                }
                if (TargetDir.magnitude < 0.1f)
                {
                    routine = LookAtPosRoutine.Stop;
                }
                break;
            case LookAtPosRoutine.Away:
                MoveSpeed = Mathf.Min(MaxMoveSpeed, MoveSpeed + MoveAcc);
                MoveDir = TargetDir.normalized * MoveSpeed;
                this.transform.position += Time.deltaTime * MoveDir;
                if (TargetDir.magnitude < 0.2f)
                {
                    routine = LookAtPosRoutine.FirstAttack;
                }
                break;
            case LookAtPosRoutine.FirstAttack:
                MoveSpeed = Mathf.Max(-MaxMoveSpeed, MoveSpeed - MoveAcc * 4.0f);
                this.transform.position += Time.deltaTime * MoveDir;
                if (TargetDir.magnitude > 0.2f)
                {
                    routine = LookAtPosRoutine.OverTake;
                }
                break;
            case LookAtPosRoutine.OverTake:
                MoveSpeed = Mathf.Max(-MaxMoveSpeed, MoveSpeed - MoveAcc * 4.0f);
                MoveDir = -TargetDir.normalized * MoveSpeed;
                this.transform.position += Time.deltaTime * MoveDir;
                if (TargetDir.magnitude < 0.2f)
                {
                    routine = LookAtPosRoutine.Stop;
                }
                break;
            default:
                break;
        }



    }
}
